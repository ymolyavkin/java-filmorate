-- Database: filmorate
--------------------------------------------------
--DROP TABLE public."user";
CREATE TABLE tutorials_tbl (
   id INT NOT NULL,
   title VARCHAR(50) NOT NULL,
   author VARCHAR(20) NOT NULL,
   submission_date DATE
);
CREATE TABLE IF NOT EXISTS user (
	id INT PRIMARY KEY,
	email VARCHAR(30) NOT NULL CHECK (email ~ '^\S+@\S+\.\S+$'),
	login VARCHAR(30) NOT NULL,
	name VARCHAR(30),
	birthday DATE NOT NULL CHECK (birthday < current_date)
);
--------------------------------------------------
-- Table: public.genre

-- DROP TABLE public.genre;

CREATE TABLE IF NOT EXISTS genre (
	id GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar(50) NOT NULL
);
--------------------------------------------------
CREATE TABLE IF NOT EXISTS friendship (
	one_friend_id INTEGER NOT NULL,
	other_friend_id INTEGER NOT NULL,
CONSTRAINT U_each_other UNIQUE (one_friend_id, other_friend_id);
CONSTRAINT FK_one_friend_id FOREIGN KEY(one_friend_id) REFERENCES user(id),
CONSTRAINT FK_other_friend_id FOREIGN KEY(other_friend_id) REFERENCES user(id));
--------------------------------------------------
CREATE TABLE IF NOT EXISTS film (
	id GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        name VARCHAR(50) NOT NULL,
	description VARCHAR(200) NOT NULL,
	login VARCHAR(30) NOT NULL,
	release DATE NOT NULL CHECK (release > '28-12-1895'),
	duration INTEGER CHECK(duration > 0),
	rating_id INTEGER NOT NULL
);
-------------------------------------------------
CREATE TABLE IF NOT EXISTS mpa (
	id GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        name VARCHAR(50) NOT NULL
);
--------------------------------------------------
CREATE TABLE IF NOT EXISTS film_genre (
	    film_id INTEGER NOT NULL,
        genre_id INTEGER,
    CONSTRAINT U_film_genre UNIQUE (film_id, genre_id),
	CONSTRAINT FK_film_id FOREIGN KEY(film_id) REFERENCES film(id),
	CONSTRAINT FK_genre_id FOREIGN KEY(genre_id) REFERENCES genre(id)
);
--------------------------------------------------
CREATE TABLE IF NOT EXISTS user_likefilm (
	    user_id BIGINT NOT NULL,
        film_id BIGINT NOT NULL,
    CONSTRAINT U_user_id_film_id UNIQUE (user_id, film_id),
    CONSTRAINT FK_film_id FOREIGN KEY(film_id) REFERENCES film(id),
	CONSTRAINT FK_user_id FOREIGN KEY(user_id) REFERENCES user(id)
);